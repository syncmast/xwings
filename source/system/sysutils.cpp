//---------------------------------------------------------------------------
#include <stdio.h>
#include <stdarg.h>
#include <errno.h>
#include <pthread.h>
#include "sysutils.h"
//---------------------------------------------------------------------------
namespace xwings
{
//---------------------------------------------------------------------------
static pthread_t __main_thread_ID;
//---------------------------------------------------------------------------
void SO_ENTRYPOINT initialization()
{
    __main_thread_ID = pthread_self();
}
//---------------------------------------------------------------------------
void SO_EXITPOINT finalization()
{

}
//---------------------------------------------------------------------------
bool CheckMainThread()
{
    return (pthread_self() == __main_thread_ID);
}
//---------------------------------------------------------------------------
pthread_t GetMainThreadID()
{
    return __main_thread_ID;
}
//---------------------------------------------------------------------------
//  TLog
//---------------------------------------------------------------------------
TLog :: TLog()
{

}
//---------------------------------------------------------------------------
TLog :: ~TLog()
{
}
//---------------------------------------------------------------------------
int TLog :: printf(const char* format, ...)
{
    char *p;
    int r;
    va_list ap;
    char buf[256];

    va_start(ap, format);
    r = vasprintf(&p, format, ap);
    va_end(ap);
    if(r == -1)
        p = strerror_r(errno, buf, sizeof(buf));

    FILE *f;
    f = fopen(LogName.c_str(), "a");
    fputs(p, f);
    fclose(f);

    if(r != -1)
        free(p);
    return r;
}
//---------------------------------------------------------------------------
} //namespace
//---------------------------------------------------------------------------

